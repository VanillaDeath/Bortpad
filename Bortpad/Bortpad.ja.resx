<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="fileMenu.Size" type="System.Drawing.Size, System.Drawing">
    <value>56, 20</value>
  </data>
  <data name="fileMenu.Text" xml:space="preserve">
    <value>ファイル</value>
  </data>
  <data name="editMenu.Size" type="System.Drawing.Size, System.Drawing">
    <value>45, 20</value>
  </data>
  <data name="editMenu.Text" xml:space="preserve">
    <value>編集</value>
  </data>
  <data name="formatMenu.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 20</value>
  </data>
  <data name="formatMenu.Text" xml:space="preserve">
    <value>フォーマット</value>
  </data>
  <data name="viewMenu.Size" type="System.Drawing.Size, System.Drawing">
    <value>48, 20</value>
  </data>
  <data name="viewMenu.Text" xml:space="preserve">
    <value>ビュー</value>
  </data>
  <data name="helpMenu.Size" type="System.Drawing.Size, System.Drawing">
    <value>51, 20</value>
  </data>
  <data name="helpMenu.Text" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="darkMode.ToolTipText" xml:space="preserve">
    <value>ダークモード</value>
  </data>
  <data name="holdShiftNotice.Size" type="System.Drawing.Size, System.Drawing">
    <value>182, 20</value>
  </data>
  <data name="holdShiftNotice.Text" xml:space="preserve">
    <value>新しいウィンドウで開きます</value>
  </data>
  <data name="mainMenu.Text" xml:space="preserve">
    <value>メインメニュー</value>
  </data>
  <data name="fileNew.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="fileNew.Text" xml:space="preserve">
    <value>新しい</value>
  </data>
  <data name="fileNewWindow.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="fileNewWindow.Text" xml:space="preserve">
    <value>新しい窓</value>
  </data>
  <data name="fileOpen.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="fileOpen.Text" xml:space="preserve">
    <value>開く...</value>
  </data>
  <data name="fileSave.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="fileSave.Text" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="fileSaveAs.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="fileSaveAs.Text" xml:space="preserve">
    <value>名前を付けて保存...</value>
  </data>
  <data name="fileSeparator1.Size" type="System.Drawing.Size, System.Drawing">
    <value>248, 6</value>
  </data>
  <data name="filePageSetup.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="filePageSetup.Text" xml:space="preserve">
    <value>ページ設定...</value>
  </data>
  <data name="filePrint.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="filePrint.Text" xml:space="preserve">
    <value>刷る...</value>
  </data>
  <data name="fileSeparator2.Size" type="System.Drawing.Size, System.Drawing">
    <value>248, 6</value>
  </data>
  <data name="fileExit.Size" type="System.Drawing.Size, System.Drawing">
    <value>251, 22</value>
  </data>
  <data name="fileExit.Text" xml:space="preserve">
    <value>クローズ</value>
  </data>
  <data name="editUndo.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editUndo.Text" xml:space="preserve">
    <value>元に戻す</value>
  </data>
  <data name="editRedo.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editRedo.Text" xml:space="preserve">
    <value>やり直し</value>
  </data>
  <data name="editSeparator1.Size" type="System.Drawing.Size, System.Drawing">
    <value>199, 6</value>
  </data>
  <data name="editCut.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editCut.Text" xml:space="preserve">
    <value>カット</value>
  </data>
  <data name="editCopy.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editCopy.Text" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="editPaste.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editPaste.Text" xml:space="preserve">
    <value>ペースト</value>
  </data>
  <data name="editDelete.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editDelete.Text" xml:space="preserve">
    <value>消去</value>
  </data>
  <data name="editSeparator2.Size" type="System.Drawing.Size, System.Drawing">
    <value>199, 6</value>
  </data>
  <data name="editSearch.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editSearch.Text" xml:space="preserve">
    <value>グーグルで検索...</value>
  </data>
  <data name="editFind.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editFind.Text" xml:space="preserve">
    <value>見附る...</value>
  </data>
  <data name="editFindNext.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editFindNext.Text" xml:space="preserve">
    <value>次を探す</value>
  </data>
  <data name="editFindPrevious.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editFindPrevious.Text" xml:space="preserve">
    <value>前を検索</value>
  </data>
  <data name="editReplace.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editReplace.Text" xml:space="preserve">
    <value>代わる...</value>
  </data>
  <data name="editGoTo.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editGoTo.Text" xml:space="preserve">
    <value>に行く...</value>
  </data>
  <data name="editSeparator3.Size" type="System.Drawing.Size, System.Drawing">
    <value>199, 6</value>
  </data>
  <data name="editSelectAll.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editSelectAll.Text" xml:space="preserve">
    <value>すべて選択</value>
  </data>
  <data name="editTimeDate.Size" type="System.Drawing.Size, System.Drawing">
    <value>202, 22</value>
  </data>
  <data name="editTimeDate.Text" xml:space="preserve">
    <value>日時</value>
  </data>
  <data name="formatWordWrap.Size" type="System.Drawing.Size, System.Drawing">
    <value>131, 22</value>
  </data>
  <data name="formatWordWrap.Text" xml:space="preserve">
    <value>ワードラップ</value>
  </data>
  <data name="formatFont.Size" type="System.Drawing.Size, System.Drawing">
    <value>131, 22</value>
  </data>
  <data name="formatFont.Text" xml:space="preserve">
    <value>フォント...</value>
  </data>
  <data name="viewZoom.Size" type="System.Drawing.Size, System.Drawing">
    <value>146, 22</value>
  </data>
  <data name="viewZoom.Text" xml:space="preserve">
    <value>ズーム</value>
  </data>
  <data name="zoomIn.Size" type="System.Drawing.Size, System.Drawing">
    <value>243, 22</value>
  </data>
  <data name="zoomIn.Text" xml:space="preserve">
    <value>ズームイン</value>
  </data>
  <data name="zoomOut.Size" type="System.Drawing.Size, System.Drawing">
    <value>243, 22</value>
  </data>
  <data name="zoomOut.Text" xml:space="preserve">
    <value>ズームアウトする</value>
  </data>
  <data name="restoreDefaultZoom.Size" type="System.Drawing.Size, System.Drawing">
    <value>243, 22</value>
  </data>
  <data name="restoreDefaultZoom.Text" xml:space="preserve">
    <value>デフォルトのズームを復元</value>
  </data>
  <data name="viewStatusBar.Size" type="System.Drawing.Size, System.Drawing">
    <value>146, 22</value>
  </data>
  <data name="viewStatusBar.Text" xml:space="preserve">
    <value>ステータスバー</value>
  </data>
  <data name="helpViewHelp.Size" type="System.Drawing.Size, System.Drawing">
    <value>195, 22</value>
  </data>
  <data name="helpViewHelp.Text" xml:space="preserve">
    <value>ヘルプを表示</value>
  </data>
  <data name="helpSendFeedback.Size" type="System.Drawing.Size, System.Drawing">
    <value>195, 22</value>
  </data>
  <data name="helpSendFeedback.Text" xml:space="preserve">
    <value>フィードバックを送信する</value>
  </data>
  <data name="helpSeparator1.Size" type="System.Drawing.Size, System.Drawing">
    <value>192, 6</value>
  </data>
  <data name="helpAbout.Size" type="System.Drawing.Size, System.Drawing">
    <value>195, 22</value>
  </data>
  <data name="helpAbout.Text" xml:space="preserve">
    <value>Bortpadについて</value>
  </data>
  <data name="statusBar.Text" xml:space="preserve">
    <value>ステータスバー</value>
  </data>
  <data name="readOnlyNotice.Text" xml:space="preserve">
    <value>読み取り専用</value>
  </data>
  <data name="position.Text" xml:space="preserve">
    <value>行 1, 桁 1</value>
  </data>
  <data name="zoomLevel.Text" xml:space="preserve">
    <value>100％</value>
  </data>
  <data name="zoomLevel.ToolTipText" xml:space="preserve">
    <value>上にスクロール：ズームイン
下にスクロール：ズームアウト
ダブルクリック：デフォルトのズームに戻す</value>
  </data>
  <data name="showLineEndings.Size" type="System.Drawing.Size, System.Drawing">
    <value>272, 22</value>
  </data>
  <data name="showLineEndings.Text" xml:space="preserve">
    <value>行末文字を表示する</value>
  </data>
  <data name="convertLineEndings.Size" type="System.Drawing.Size, System.Drawing">
    <value>272, 22</value>
  </data>
  <data name="convertLineEndings.Text" xml:space="preserve">
    <value>に変換する...</value>
  </data>
  <data name="toolStripSeparator4.Size" type="System.Drawing.Size, System.Drawing">
    <value>269, 6</value>
  </data>
  <data name="pressingEnterUses.Size" type="System.Drawing.Size, System.Drawing">
    <value>272, 22</value>
  </data>
  <data name="pressingEnterUses.Text" xml:space="preserve">
    <value>↲キーを押すときに使用されます:</value>
  </data>
  <data name="windowsLineFeed.Size" type="System.Drawing.Size, System.Drawing">
    <value>272, 22</value>
  </data>
  <data name="linuxLineFeed.Size" type="System.Drawing.Size, System.Drawing">
    <value>272, 22</value>
  </data>
  <data name="linuxLineFeed.Text" xml:space="preserve">
    <value>&amp;Linux / macOS (LF)</value>
  </data>
  <data name="macLineFeed.Size" type="System.Drawing.Size, System.Drawing">
    <value>272, 22</value>
  </data>
  <data name="macLineFeed.Text" xml:space="preserve">
    <value>レガシー&amp;Mac (CR)</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms">
    <value>NoControl</value>
  </data>
</root>